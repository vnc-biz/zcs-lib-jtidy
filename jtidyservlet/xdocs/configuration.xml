<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Configuration</title>
        <author email="vlads(at)users.sourceforge.net">Vlad Skarzhevskyy</author>
    </properties>
    <body>
        <section name="Configuration properties">
            <p>
                This table lists all the configurable properties for the library. The default properties are defined in
                the
                <code>JTidyServlet.properties</code>
                file included in the library jar.
            </p>
            <p>There are 2 ways to override default property settings for the whole web application:</p>
            <ul>
                <li>
                    Create a custom properties file named "JTidyServlet.properties" and place it in the application
                    classpath. If the key required does not exist in the specified file, the key will take default value
                    defined in the code.
                </li>
                <li>
                    Create a custom properties file with name other than "JTidyServlet.properties" and place it in the
                    application classpath. Define
                    <code>
                        <![CDATA[<init-param>]]>
                    </code>
                    <code>properties.filename</code>
                    for
                    <code>JTidyFilter</code>
                    or
                    <code>JTidyServlet</code>
                    in
                    <code>web.xml</code>
                    . If the key required does not exist in the specified file, the key will take default value defined
                    in the file "JTidyServlet.properties".
                </li>
            </ul>
            <p>Configure properties using JTidyServlet in your application web.xml</p>
            <source>
                <![CDATA[
<web-app>
...
  <servlet>
    <servlet-name>JTidyServlet</servlet-name>
    <servlet-class>org.w3c.tidy.servlet.TidyServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
    <init-param>
        <param-name>properties.filename</param-name>
        <param-value>JTidyServletProduction.properties</param-value>
    </init-param>
  </servlet>
                ]]>
            </source>
            <p>Configure properties using JTidyFilter in your application web.xml</p>
            <source>
                <![CDATA[
<web-app>
...
  <filter>
    <filter-name>JTidyFilter</filter-name>
    <filter-class>org.w3c.tidy.servlet.filter.JTidyFilter</filter-class>
    <init-param>
        <param-name>properties.filename</param-name>
        <param-value>JTidyServletProduction.properties</param-value>
    </init-param>
  </filter>
                ]]>
            </source>
            <subsection name="JTidyServlet.properties">
                <table>
                    <thead>
                        <tr>
                            <th>Property</th>
                            <th>Default</th>
                            <th>Valid Values</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>imageGetTimeout</td>
                            <td>2000</td>
                            <td>Any reasonable number</td>
                            <td>
                                Time in milliseconds the servlet thread will sleep if Record is not yet available in
                                Repository. If validate only is on, browser receives and start displaying HTML page
                                before it was validated by JTidy.
                            </td>
                        </tr>
                        <tr>
                            <td>imageNamePrefix</td>
                            <td>jtidy_html_32x26_</td>
                            <td>String</td>
                            <td>
                                The image name prefix for validation icons. You could change images to better match your
                                application style. First servlet will try to load image from Resources using ClassLoader
                                if not found would be redirected to RequestDispatcher.
                            </td>
                        </tr>
                        <tr>
                            <td>imageNameExtension</td>
                            <td>.png</td>
                            <td>String</td>
                            <td>
                                Image name is constructed from imageNamePrefix + [unknown|error|warning|ok] +
                                imageNameExtension
                            </td>
                        </tr>
                        <tr>
                            <td>imageWidth</td>
                            <td>32</td>
                            <td>int</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>imageHeight</td>
                            <td>26</td>
                            <td>int</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>xhtml</td>
                            <td>true</td>
                            <td>boolean</td>
                            <td>output jtidy validation image tag as xhtml</td>
                        </tr>
                        <tr>
                            <td>logValidationMessages</td>
                            <td>false</td>
                            <td>boolean</td>
                            <td>log JTidy validation messages to log file</td>
                        </tr>
                        <tr>
                            <td>JTidyServletURI</td>
                            <td>/JTidy</td>
                            <td>String</td>
                            <td>
                                Real path to JTidyServlet should match one in web.xml
                                <code>
                                    <![CDATA[<servlet-mapping><url-pattern>]]>
                                </code>
                                for JTidyServlet. This value is used to build working links to validation images and
                                JTidy reports created by
                                <a href="./tagreference-jtidy-taglib-12.html#validationImage">
                                    <code>
                                        <![CDATA[<jtidy:validationImage/>]]>
                                    </code>
                                </a>
                                JSP Tags. The href and src would begin with this string
                                <code>request.getContextPath() + JTidyServletURI</code>
                            </td>
                        </tr>
                        <tr>
                            <td>repositoryFactory.class</td>
                            <td class="source">
                                <a href="./apidocs/org/w3c/tidy/servlet/data/DefaultRepositoryFactory.html">
                                    ...DefaultRepositoryFactory
                                </a>
                            </td>
                            <td>
                                Fully Qualified Class name for a valid
                                <a href="./apidocs/org/w3c/tidy/servlet/RepositoryFactory.html">RepositoryFactory</a>
                                implementation
                            </td>
                            <td>Public interface for user to redefine validation results handling.</td>
                        </tr>
                    </tbody>
                </table>
            </subsection>
        </section>
    </body>
</document>
